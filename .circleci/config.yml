version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  # aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project
commands:
   # Exercise - Rollback
   destroy_environment:
      docker:
       - image: amazon/aws-cli
      steps:
       - run:
           name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
jobs:
 create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
                --region us-west-2

# Exercise: Config and Deployment
 configure_infrastructure: 
  docker:
    - image: python:3.7-alpine3.11
  steps:
    - checkout
    - add_ssh_keys:
            # You can get this ID in the section where you registered the SSH Key
        fingerprints: ["4d:6f:16:49:ee:ae:e4:67:e7:97:aa:4a:b5:27:60:82"] 
    - run:
        name: Install Ansible
        command: |
          apk add --update ansible # Install Ansible
    - run:
        name: Run Playbook and Configure server
        command: |
            ansible-playbook -i inventory main.yml  # Your command            
  
 smoke_test:
  docker:
   - image: alpine:latest
  steps:
   - run:
       name: Test job
       # Fail the job intentionally to simulate an error.
       command:  return 1
   - destroy_environment   
workflows:
  my_workflow:
      jobs:
        - create_infrastructure                
          #    - configure_infrastructure 
        - smoke_test
